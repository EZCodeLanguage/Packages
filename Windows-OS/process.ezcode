class process {
    undefined Value

    get => @str {
        return name
    }

    method name => @str {
        return runexec EZCodeLanguage.EZHelp.ProcessName ~> {Value}
    }
    method kill {
        runexec EZCodeLanguage.EZHelp.ProcessKill ~> {Value}
    }
    method get-property : @str:propName {
        return runexec EZCodeLanguage.EZHelp.ProcessGetProperty ~> {Value}, {propName}
    }
    method run-function : @str:funcName {
        return runexec EZCodeLanguage.EZHelp.ProcessRunFunction ~> {Value}, {funcName}
    }

    method start : @str:path, ? @str:arguments => @process {
        return runexec EZCodeLanguage.EZHelp.ProcessStart ~> {path}, {arguments}
    }

    method get-current-process => @process {
        return runexec EZCodeLanguage.EZHelp.ProcessGetCurrentProcess
    }
    method get-process-by-id : @int:_id, ? @str:_machineName {
        return runexec EZCodeLanguage.EZHelp.ProcessGetProcessById ~> {_id}, {_machineName}
    }
    method get-processes : ? @str:_machineName {
        return runexec EZCodeLanguage.EZHelp.ProcessGetProcesses ~> {_machineName}
    }
    method get-processes-by-name : @str:_name ? @str:_machineName {
        return runexec EZCodeLanguage.EZHelp.ProcessGetProcessesByName ~> {_name}, {_machineName}
    }
}