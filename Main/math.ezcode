global nocol method add : obj1, obj2 => @float {
    return runexec EZCodeLanguage.EZHelp.Add ~> {obj1}, {obj2}
}
global nocol method subtract : obj1, obj2 => @float {
    return runexec EZCodeLanguage.EZHelp.Subtract ~> {obj1}, {obj2}
}
global nocol method multiply : obj1, obj2 => @float {
    return runexec EZCodeLanguage.EZHelp.Multiply ~> {obj1}, {obj2}
}
global nocol method divide : obj1, obj2 => @float {
    return runexec EZCodeLanguage.EZHelp.Divide ~> {obj1}, {obj2}
}
global nocol method avg : ! @float:nums => @float {
    return runexec EZCodeLanguage.EZHelp.Average ~> {nums}
}
global nocol method clamp : @float:val, @float:min, @float:max => @float {
    return runexec EZCodeLanguage.EZHelp.Clamp ~> {val}, {min}, {max}
}
global nocol method random : @float:min, @float:max => @int {
    return runexec EZCodeLanguage.EZHelp.RandomNumber ~> {min}, {max}
}
global nocol method round-to-int : @float:num => @int {
    return runexec EZCodeLanguage.EZHelp.RoundToInt ~> {num}
}
global method pi => @float {
    return runexec EZCodeLanguage.EZHelp.Pi
}
global method logbase-e => @float {
    return runexec EZCodeLanguage.EZHelp.E
}
global nocol method operate : @str:op, ! @float:obj => @float {
    return runexec EZCodeLanguage.EZHelp.MathFunc ~> {obj}, {op}
}
